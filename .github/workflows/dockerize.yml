name: CI/CD Pipeline
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
env:
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS_PAT }}
          fetch-depth: 0  # Fetch all history for branches and tags

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker image tag
        id: docker_tag
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BUILD_NUMBER=$(cat build_number.txt || echo "0")
            BUILD_NUMBER=$((BUILD_NUMBER + 1))
            echo $BUILD_NUMBER > build_number.txt
            echo "BUILD_TAG=build-${BUILD_NUMBER}" >> $GITHUB_ENV
          else
            echo "BUILD_TAG=latest" >> $GITHUB_ENV
          fi

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker_tag="${{ env.DOCKER_IMAGE_NAME }}:${{ env.BUILD_TAG }}"
          echo "DOCKER_IMAGE=${docker_tag}" >> $GITHUB_ENV
          docker buildx build --push --tag "${docker_tag}" .


      - name: Install doctl
        run: sudo snap install doctl

      - name: Log in to DigitalOcean
        run: doctl auth init --access-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}


      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh

          # Define file path and secret value
          SSH_KEY_PATH=~/.ssh/id_rsa
          SSH_KEY="${{ secrets.DIGITALOCEAN_SSH_KEY }}"

          # Check if SSH key file exists and compare content
          if [ -f "$SSH_KEY_PATH" ]; then
            CURRENT_KEY=$(cat "$SSH_KEY_PATH")
            if [ "$CURRENT_KEY" != "$SSH_KEY" ]; then
              echo "Updating SSH key"
              echo "$SSH_KEY" > "$SSH_KEY_PATH"
              chmod 600 "$SSH_KEY_PATH"
            else
              echo "SSH key is already up to date"
            fi
          else
            echo "Creating SSH key file"
            echo "$SSH_KEY" > "$SSH_KEY_PATH"
            chmod 600 "$SSH_KEY_PATH"
          fi

      - name: Restart container on DigitalOcean droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.DIGITALOCEAN_DROPLET_USER }}@${{ secrets.DIGITALOCEAN_DROPLET_IP }} << 'EOF'
            docker pull ${{ env.DOCKER_IMAGE }}
            docker stop atomania-app || true
            docker rm atomania-app || true
            docker run -d --name atomania-app -p 80:3000 ${{ env.DOCKER_IMAGE }}
          EOF

        # Determine the tag for the image
        #      - name: Set Docker image tag
        #        id: docker_tag
        #        run: |
        #          if [ "${{ github.event_name }}" == "pull_request" ]; then
        #            BUILD_NUMBER=$(cat build_number.txt || echo "0")
        #            BUILD_NUMBER=$((BUILD_NUMBER + 1))
        #            echo $BUILD_NUMBER > build_number.txt
        #            echo "BUILD_TAG=build-${BUILD_NUMBER}" >> $GITHUB_ENV
        #          else
        #            echo "BUILD_TAG=latest" >> $GITHUB_ENV
        #          fi
        #
        #      # Build and push the Docker image
        #      - name: Build and push Docker image
        #        run: |
        #          docker buildx build --push --tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.BUILD_TAG }} .
        #
        #      # Update build number file if pull request
        #      - name: Save build number
        #        if: github.event_name == 'pull_request'
        #        run: |
        #          git config --local user.name "github-actions[bot]"
        #          git config --local user.email "github-actions[bot]@users.noreply.github.com"
        #          git add build_number.txt
        #          git commit -m "Increment build number"
        #          git push origin HEAD:${{ github.head_ref }}
